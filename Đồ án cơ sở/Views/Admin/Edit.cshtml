@model Đồ_án_cơ_sở.Models.CauHoi

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}

<h2>Sửa câu hỏi</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Câu hỏi</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.MaCH)
    <div class="form-group">
        @Html.LabelFor(model => model.MaMH, "MaMH", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MaMH", null, htmlAttributes: new { @class = "form-control",@required = "required" })
            @Html.ValidationMessageFor(model => model.MaMH, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CauHoi1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CauHoi1, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.CauHoi1, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Hinh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Hinh, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.Hinh, "", new { @class = "text-danger" })
            <input type="file" name="fileUpload" id="fileUpload" accept="image/*"
                   style="display:none;" />
            <input type="button" id="btnUpload" value="Chọn" class="btn btn-success" />
            <img src="@Model.Hinh" width="150px" height="200px" id="pictureUpload" />
        </div>
    </div>
    @section upload
{
        <script>
            $(function () {
                $('#btnUpload').click(function () {
                    $('#fileUpload').trigger('click');
                });
            });
            $('#fileUpload').change(function () {
                if (window.FormData !== undefined) {
                    var fileUpload = $('#fileUpload').get(0);
                    var files = fileUpload.files;
                    var formData = new FormData();
                    formData.append('file', files[0]);

                    $.ajax(
                        {
                            type: 'POST',
                            url: '/Admin/ProcessUpload',
                            contentType: false,
                            processData: false,
                            data: formData,
                            success: function (urlImage) {

                                $('#pictureUpload').attr('src', urlImage);
                                $('#Hinh').val(urlImage);
                            },
                            error: function (err) {
                                alert('Error ', err.statusText);

                            }
                        });
                }
            });
        </script>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.CauA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CauA, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.CauA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CauB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CauB, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.CauB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CauC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CauC, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.CauC, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CauD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CauD, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.CauD, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DapAn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DapAn, new List<SelectListItem>
                {
                    new SelectListItem { Text = "CauA", Value = "CauA" },
                    new SelectListItem { Text = "CauB", Value = "CauB" },
                    new SelectListItem { Text = "CauC", Value = "CauC" },
                    new SelectListItem { Text = "CauD", Value = "CauD" }
                },
                "Chọn đáp án",
                new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(model => model.DapAn, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Lưu" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Trở về trang chủ", "Index")
</div>
